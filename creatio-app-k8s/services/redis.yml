apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: redis
  labels:
    app: redis
spec:
  serviceName: redis
  replicas: 1 # 1 master and 2 slaves
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: 192.168.108.165:8084/creatio-k8s-repo/redis:5.0.7-debian-9-r45
        ports:
        - containerPort: 6379
        # env:
        # - name: REDIS_PASSWORD
        #   value: "redis-password" # Use a secure password here
        command: ["redis-server"]
        args: []
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc


---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: redis

spec:
  type: LoadBalancer
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis


# ---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: redis-sentinel
#   namespace: redis

#   labels:
#     app: redis-sentinel
# spec:
#   serviceName: redis-sentinel
#   replicas: 1 # Number of Sentinel instances
#   selector:
#     matchLabels:
#       app: redis-sentinel
#   template:
#     metadata:
#       labels:
#         app: redis-sentinel
#     spec:
#       containers:
#       - name: redis-sentinel
#         image: 192.168.108.165:8084/creatio-k8s-repo/redis:5.0.7-debian-9-r45
#         ports:
#         - containerPort: 26379
#         env:
#         - name: REDIS_PASSWORD
#           value: "redis-password" # Use a secure password here
#         command: ["/run-sentinel.sh"]
#         args:
#         - /opt/bitnami/redis/sentinel.conf
#         - --sentinel
#         - --sentinel monitor mymaster redis-0.redis.default.svc.cluster.local 6379 2
#         - --sentinel auth-pass mymaster $(REDIS_PASSWORD)
#         resources:
#           requests:
#             memory: "128Mi"
#             cpu: "50m"
#         livenessProbe:
#           tcpSocket:
#             port: 26379
#           initialDelaySeconds: 5
#           periodSeconds: 5
#         readinessProbe:
#           tcpSocket:
#             port: 26379
#           initialDelaySeconds: 5
#           periodSeconds: 5


# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: redis-sentinel
#   namespace: redis

# spec:
#   type: ClusterIP
#   ports:
#   - port: 26379
#     targetPort: 26379
#   selector:
#     app: redis-sentinel
