# gs-web-api pods settings.
webApi:
  # Endpoint description
  # See https://kubernetes.io/docs/concepts/services-networking/service/ for more details.
  service:
    # NodePort or LoadBalancer or enable ingress below
    type: LoadBalancer
    # Uncomment line below if need use static port
    nodePort: 32020
  env:
    # Ignored indexing entities list. Not available entities in global search.
    ignoredEntities: VwSysProcessLog,SysPrcHistoryLog,MLModel,MLModelFile,SysSettings,VwWebServiceV2

# gs-web-indexing-service pods settings.
webIndexingService:
  # Endpoint description
  # See https://kubernetes.io/docs/concepts/services-networking/service/ for more details.
  service:
    # NodePort or LoadBalancer or enable ingress below
    type: NodePort
    # Uncomment line below if need use static port
    nodePort: 32021
  # Ingress endpoint settings (optional)
  # See https://kubernetes.io/docs/concepts/services-networking/ingress/ for more details.

# gs-search-service pods settings.
searchService:
  # Endpoint description
  # See https://kubernetes.io/docs/concepts/services-networking/service/ for more details.
  service:
    # NodePort or LoadBalancer or enable ingress below
    type: NodePort
    nodePort: 30332

# Log4Net settings
log4Net:
  level: ERROR

# Multi pods global parameters
global:
  # Elastic search parameters
  elasticsearch:
    url: http://10.233.13.46:9200
    user: ""
    password: ""

  identityProvider:
    url: ""
    useOAuth: false

  # Search service external url
  searchService:
    url: http://k8s-master-node:30332

  webApi:
    url: http://k8s-master-node:32020

  # RabbitMQ connection parameters
  rabbitmq:
    host: 10.233.3.108
    vhost: /
    port: 5672
    user: rabbitmq
    password: rabbitmq

  # Global search database connection parameters
  db:
    user: postgres
    password: 
    database: globalsearch
    host: 192.168.102.28
    port: 5432

  # Redis server connection parameters
  redis:
    host: 10.233.14.66
    port: 6379
    database: 1

  incrementDays: 500

# Redis deployment settings
# For more details see https://github.com/helm/charts/blob/master/stable/redis/values.yaml
redis:
  enabled: false
  fullnameOverride: redis
  usePassword: false
  master:
    persistence:
      enabled: true
      size: 1Gi
#      storageClass: dynamic-pvc
    resources:
      requests:
        memory: 128Mi
        cpu: 70m
      limits:
        memory: 256Mi
        cpu: 70m
  cluster:
    enabled: false

# RabbitMQ deployment settings
# For more details see https://github.com/helm/charts/blob/master/stable/rabbitmq/values.yaml
rabbitmq:
  enabled: false
  livenessProbe:
    enabled: true
  readinessProbe:
    enabled: true
  resources:
    requests:
      memory: 1024Mi
      cpu: 300m
    limits:
      memory: 1024Mi
      cpu: 300m
  fullnameOverride: rabbitmq
  auth:
    username: gs
    password: gs
  persistence:
    enabled: true
    size: 1Gi
#    storageClass: dynamic-pvc
  clustering:
    enabled: false
  hostAliases:
    - ip: "127.0.0.1"
      hostnames:
        - "rabbitmq-0"
        - "rabbitmq-0.rabbitmq-headless.globalsearch.svc.cluster.local"

# PostgreSQL deployment settings
# For more details see https://github.com/helm/charts/blob/master/stable/postgresql/values.yaml
postgresql:
  enabled: false
  fullnameOverride: postgresql
  persistence:
    enabled: true
    size: 2Gi
#    storageClass: dynamic-pvc
  resources:
    requests:
      memory: 128Mi
      cpu: 200m
    limits:
      memory: 512Mi
      cpu: 300m
  postgresqlUsername: postgres
  postgresqlPassword: password
  postgresqlDatabase: postgres
  postgresqlConfiguration:
    listen_addresses : "'*'"
    port : 5432
    wal_level : "'hot_standby'"
    fsync : "'on'"
    max_wal_size : "'400MB'"
    max_wal_senders : 16
    wal_keep_segments : 12
    hot_standby : "'on'"
    include_dir : "'conf.d'"
    max_connections: 1024
  image:
    tag: 11.5.0-debian-9-r60
  initdbScripts:
    init.sql: |
      CREATE DATABASE globalsearch;
      GRANT ALL PRIVILEGES ON DATABASE globalsearch TO postgres;

# Elasticsearch deployment settings
# For more details see https://github.com/elastic/helm-charts/blob/main/elasticsearch/values.yaml
elasticsearch:
  enabled: false
  replicas: 1
  minimumMasterNodes: 1
  roles:
    master: "true"
    ingest: "true"
    data: "true"
    remote_cluster_client: "true"
    ml: "false"
  extraEnvs:
    - name: xpack.security.enabled
      value: "false"
    - name: xpack.ml.enabled
      value: "false"
    - name: xpack.watcher.enabled
      value: "false"
    - name: ES_JAVA_OPTS
      value: "-Xms1500m -Xmx1500m"
  resources:
    requests:
      cpu: 1000m
      memory: 3Gi
    limits:
      cpu: 1000m
      memory: 3Gi
  persistence:
    enabled: true
  volumeClaimTemplate:
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: 30Gi

# image:
#   pullSecrets:
#     - name: registry.creatio.com
